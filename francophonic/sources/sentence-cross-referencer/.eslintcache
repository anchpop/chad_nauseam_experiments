[{"C:\\Users\\hyper\\dev\\chad_nauseam\\chad_nauseam_experiments\\francophonic\\sources\\sentence-cross-referencer\\src\\App.tsx":"1"},{"size":1438,"mtime":1606248896890,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"b6a27h","C:\\Users\\hyper\\dev\\chad_nauseam\\chad_nauseam_experiments\\francophonic\\sources\\sentence-cross-referencer\\src\\App.tsx",["7","8"],"import React, { useState } from \"react\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nconst yaml = require(\"js-yaml\");\n\ninterface Token {\n  text: string;\n  whitespace: string;\n}\n\ninterface Sentences {\n  [key: string]: {\n    tokens_fr: Token[];\n    tokens_en: { [key: string]: Token[] };\n  };\n}\n\nconst getFile = async () => {\n  const [fileHandle] = await (window as any).showOpenFilePicker();\n  const file = await fileHandle.getFile();\n  const contents = await file.text();\n  return contents;\n};\n\nconst saveFile = async () => {\n  const options = {\n    types: [\n      {\n        description: \"Text Files\",\n        accept: {\n          \"text/plain\": [\".yaml\"],\n        },\n      },\n    ],\n  };\n  const handle = await (window as any).showSaveFilePicker(options);\n  return handle;\n};\n\nconst App = () => {\n  const [sentencesToAssociate, setSentencesToAssociate] = useState<Sentences>(\n    {}\n  );\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button\n          onClick={async () =>\n            setSentencesToAssociate(yaml.safeLoad(await getFile()))\n          }\n        >\n          Activate Lasers\n        </button>\n      </header>\n      {Object.entries(sentencesToAssociate).map(([frenchSentence, info]) => (\n        <p>\n          {info.tokens_fr.map(({ text }) => (\n            <span className=\"french token\">{text}</span>\n          ))}\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n",{"ruleId":"9","severity":1,"message":"10","line":3,"column":8,"nodeType":"11","messageId":"12","endLine":3,"endColumn":12},{"ruleId":"9","severity":1,"message":"13","line":27,"column":7,"nodeType":"11","messageId":"12","endLine":27,"endColumn":15},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'saveFile' is assigned a value but never used."]